version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "9091:3000"
    depends_on:
      - prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - my-network

  discovery-server:
    container_name: discovery-server
    image: swanscon/discovery-server:latest
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
    networks:
      - my-network

  api-gateway:
    container_name: api-gateway
    image: swanscon/api-gateway:latest
    ports:
      - "8081:8081"
    depends_on:
      - zipkin
      - discovery-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - my-network

  mysql-game:
    container_name: mysql-game
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: tombertAT9!
      MYSQL_DATABASE: game-service
    ports:
    - "3310:3306"
    volumes:
    - ./game-service:/data/mysql
    restart: always
    networks:
      - my-network

  mysql-event:
    container_name: mysql-event
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: tombertAT9!
      MYSQL_DATABASE: event-service
    ports:
    - "3307:3306"
    volumes:
      - ./event-service:/data/mysql
    restart: always
    networks:
      - my-network

  mysql-attendee:
    container_name: mysql-attendee
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: tombertAT9!
      MYSQL_DATABASE: attendee-service
    ports:
      - "3308:3306"
    volumes:
      - ./attendee-service:/data/mysql
    restart: always
    networks:
      - my-network

  mysql-user:
    container_name: mysql-user
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: tombertAT9!
      MYSQL_DATABASE: user-service
    ports:
      - "3309:3306"
    volumes:
      - ./user-service:/data/mysql
    restart: always
    networks:
      - my-network

  game-service:
    container_name: game-service
    image: swanscon/game-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-game:3306/game-service
      - WAIT_FOR_DB_HOST=mysql-game:3306
    depends_on:
      - discovery-server
      - api-gateway
      - mysql-game
    networks:
      - my-network

  event-service:
    container_name: event-service
    image: swanscon/event-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-event:3306/event-service
      - WAIT_FOR_DB_HOST=mysql-event:3306
    depends_on:
      - zipkin
      - discovery-server
      - api-gateway
      - mysql-event
    networks:
      - my-network

  attendee-service:
    container_name: attendee-service
    image: swanscon/attendee-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-attendee:3306/attendee-service
      - WAIT_FOR_DB_HOST=mysql-attendee:3306
    depends_on:
      - broker
      - zipkin
      - discovery-server
      - api-gateway
      - mysql-attendee
    networks:
      - my-network

  invitation-service:
    container_name: invitation-service
    image: swanscon/invitation-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - broker
      - zipkin
      - discovery-server
      - api-gateway
    networks:
      - my-network

  user-service:
    container_name: user-service
    image: swanscon/user-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-user:3306/user-service
      - WAIT_FOR_DB_HOST=mysql-user:3306
    depends_on:
      - zipkin
      - discovery-server
      - api-gateway
      - mysql-user
    networks:
      - my-network

  react-app:
    container_name: react-app
    image: swanscon/react-app:latest
    build:
      context: ./final-project-web
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - api-gateway
    networks:
      - my-network

networks:
  my-network:
    driver: bridge