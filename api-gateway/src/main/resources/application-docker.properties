# Application name and server port
spring.application.name=api-gateway
# Docker will map external 8765 to this
server.port=8081

# Eureka Client configuration for Docker
eureka.client.service-url.defaultZone=http://admin:admin@discovery-server:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Routes configuration, assuming the services are registered with Eureka under these names
spring.cloud.gateway.routes[0].id=discovery-server
spring.cloud.gateway.routes[0].uri=lb://discovery-server
spring.cloud.gateway.routes[0].predicates[0]=Path=/eureka/**
spring.cloud.gateway.routes[0].filters[0]=SetPath=/

spring.cloud.gateway.routes[1].id=game-service
spring.cloud.gateway.routes[1].uri=lb://game-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/game/**

spring.cloud.gateway.routes[2].id=event-service
spring.cloud.gateway.routes[2].uri=lb://event-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/event/**

spring.cloud.gateway.routes[3].id=attendee-service
spring.cloud.gateway.routes[3].uri=lb://attendee-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/attendee/**

spring.cloud.gateway.routes[4].id=user-service
spring.cloud.gateway.routes[4].uri=lb://user-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/user/**

# Zipkin Tracing endpoint for Docker
management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
management.tracing.sampling.probability=1.0

# Actuator and Prometheus Endpoint Exposure
management.endpoints.web.exposure.include=*
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
